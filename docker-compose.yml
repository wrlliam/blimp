services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
        - BETTER_AUTH_URL=${BETTER_AUTH_URL}
        - DATABASE_URL=postgresql://blimp_user:K9mP2xR7nQ4vL8wE@db:5432/blimp_db
        - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
        - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
        - API_PORT=${API_PORT}
        - WS_PORT=${WS_PORT}
        - NEXT_PUBLIC_URL=${NEXT_PUBLIC_URL}
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
        - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL}
        - NEXT_PUBLIC_DISCORD_BOT_INVITE_URL=${NEXT_PUBLIC_DISCORD_BOT_INVITE_URL}
    command: sh -c "bun run db:all && bun run start"
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://blimp_user:K9mP2xR7nQ4vL8wE@db:5432/blimp_db
      - REDIS_URL=redis://:R5tY8uN3pL9mK2wX@redis:6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://blimp_user:K9mP2xR7nQ4vL8wE@db:5432/blimp_db
      - REDIS_URL=redis://:R5tY8uN3pL9mK2wX@redis:6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=blimp_user
      - POSTGRES_PASSWORD=K9mP2xR7nQ4vL8wE
      - POSTGRES_DB=blimp_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U blimp_user -d blimp_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass R5tY8uN3pL9mK2wX
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
